

#include "generics.h"
#include "resource.h"

static	long	file_message(object wind, unsigned id);
static	long	file_dialog(object wind, unsigned id);
static	long	file_exit(object wind, unsigned id);

int	start()
{
	object	win;
	char	title[80];

	sprintf(title, "My Test Application - %d", 8*sizeof(int));
	win = vNew(MainWindow, title);

	mLoadIcon(win, ALGOCORP_ICON);

	mLoadMenu(win, IDR_MENU1);
	mAssociate(win, ID_FILE_MESSAGE, file_message);
	mAssociate(win, ID_FILE_DIALOG, file_dialog);
	mAssociate(win, ID_FILE_EXIT, file_exit);

	return gProcessMessages(win);
}

static	long	file_message(object wind, unsigned id)
{
	gMessage(wind, "File_Message");
	return 0L;
}

/*  This is the function which will get executed whenever the push button
    control is activated.  The ctl argument represents the actual push
    button control being activated, and the dlg object represents the
    entire dialog.  */

static	int	push_button(object ctl, object dlg)
{
	/*  In this case we are only going to display a message box when
	    the button is activated.  */

	gMessage(dlg, "Push Button Hit");
	return 0;
}

static	void	init_controls(object dlg)
{
	object	ctl;
	
	/*  This next line defines the IDC_BUTTON control to be of type
	    PushButton.  */

	ctl = mAddControl(dlg, PushButton, IDC_BUTTON);

	/*  This next line is used to associate the push_button() function
	    (defined above) with the control represented by ctl.  This
	    function will automatically get called whenever the user activates
	    the push button.  */

	gSetFunction(ctl, push_button);
}

static	void	displayValues(object wind, object dlg)
{
}

static	long	file_dialog(object wind, unsigned id)
{
	object	dlg;
	int	r;
	
	dlg = mNewDialog(ModalDialog, DL1, wind);

	init_controls(dlg);

	r = gPerform(dlg);

	if (r == TRUE)
		displayValues(wind, dlg);

	gDispose(dlg);

	return 0L;
}

static	long	file_exit(object wind, unsigned id)
{
	gQuitApplication(Application, 0);
	return 0L;
}
